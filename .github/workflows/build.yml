
name: Build Doido Engine
on:
  push:
    paths-ignore:
      - '.vscode/**'
      - 'art/**'
      - '.gitattributes'
      - '.gitignore'
      - 'README.md'
      - 'ver.txt'
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.3

      - name: Read Version
        id: ver
        uses: jaywcjlove/github-action-read-file@v2.0.0
        with:
          path: ver.txt
            
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
            haxelib --global install hmm
            haxelib --global run hmm setup
            haxelib --global run hmm init
            haxelib --global run hmm install
        shell: cmd
      - name: Compile
        run: haxelib run lime build windows --app-version="${{ steps.ver.outputs.content }}-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: DoidoEngine-Windows-${{ steps.ver.outputs.content }}-${{ github.run_id}}
          path: export/release/windows/bin
  build-linux:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.3

      - name: Read Version
        id: ver
        uses: jaywcjlove/github-action-read-file@v2.0.0
        with:
          path: ver.txt
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm init
          hmm install
      - name: Compile
        run:
          haxelib run lime build linux --app-version="${{ steps.ver.outputs.content }}-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: DoidoEngine-Linux-${{ steps.ver.outputs.content }}-${{ github.run_id}}
          path: 'export/release/linux/bin'

  build-html:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.3

      - name: Read Version
        id: ver
        uses: jaywcjlove/github-action-read-file@v2.0.0
        with:
          path: ver.txt
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm init
          hmm install
      - name: Compile
        run:
          haxelib run lime build html5 --app-version="${{ steps.ver.outputs.content }}-${{ github.run_id}}"
      - name: Push a directory to another repository
        uses: datalbry/copy_folder_to_another_repo_action@1.0.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_WIKI }}
        with:
          source_folder: 'export/release/html5/bin'
          destination_repo: 'DoidoTeam/doidoteam.github.io'
          destination_folder: 'funkin/doidoweb'
          user_email: '85184617+iamteles@users.noreply.github.com'
          user_name: 'iamteles'
          commit_msg: 'Pushed HTML5 build from github.run_id'

            
  build-macos:
    # hoping setting this to macos 13 will keep it working on intel macs??? i don't actually own any apple hardware so i'm just guessing here...
    runs-on: macos-13

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.3

      - name: Read Version
        id: ver
        uses: jaywcjlove/github-action-read-file@v2.0.0
        with:
          path: ver.txt
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm init
          hmm install
      - name: Compile
        run:
          haxelib run lime build mac --app-version="${{ steps.ver.outputs.content }}-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: DoidoEngine-macOS-${{ steps.ver.outputs.content }}-${{ github.run_id}}
          path: 'export/release/macos/bin'

  build-android:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Read Version
        id: ver
        uses: jaywcjlove/github-action-read-file@v2.0.0
        with:
          path: ver.txt
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm init
          hmm install
          haxelib install flixel
          haxelib install flixel-addons
          haxelib install flixel-ui
      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true
      - name: Compile
        run:
          haxelib run lime build android --app-version="${{ steps.ver.outputs.content }}-${{ github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.4.0
        with:
          name: DoidoEngine-android-${{ steps.ver.outputs.content }}-${{ github.run_id}}
          path: 'export/release/android/bin/app/build/outputs/apk/debug'
